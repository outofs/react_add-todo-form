{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","_ref","user","_jsx","className","href","concat","children","TodoInfo","todo","_jsxs","classNames","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","preparedTodos","_objectSpread","App","_useState","useState","_useState2","_slicedToArray","setToDos","_useState3","_useState4","setTitle","_useState5","_useState6","setUserId","_useState7","_useState8","titleError","setTitleError","_useState9","_useState10","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","newUserId","newTitle","newToDo","Math","max","apply","_toConsumableArray","currentTodos","onSubmitFunc","type","placeholder","value","onChange","target","toString","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.102e2031.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { ToDo } from '../../types/ToDo';\n\ntype Props = {\n  todo: ToDo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={\n      classNames('TodoInfo', { 'TodoInfo--completed': todo.completed })\n    }\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import { ToDo } from '../../types/ToDo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: ToDo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { ToDo } from './types/ToDo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const preparedTodos: ToDo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setToDos] = useState<ToDo[]>(preparedTodos);\n  const [title, setTitle] = useState<string>('');\n  const [userId, setUserId] = useState<number>(0);\n\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [userIdError, setUserIdError] = useState<boolean>(false);\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setTitleError(false);\n    setUserIdError(false);\n  };\n\n  const titleChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const userIdChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setUserIdError(false);\n  };\n\n  const onSubmitFunc = (newUserId: number, newTitle: string) => {\n    const newToDo: ToDo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title: newTitle,\n      completed: false,\n      userId: newUserId,\n      user: getUserById(userId),\n    };\n\n    setToDos(currentTodos => [...currentTodos, newToDo]);\n  };\n\n  const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserIdError(true);\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmitFunc(userId, title);\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onSubmitHandler}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={titleChangeHandler}\n          />\n          {titleError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId.toString()}\n            onChange={userIdChangeHandler}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))\n            }\n          </select>\n\n          {userIdError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}